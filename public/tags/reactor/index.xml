<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Reactor on cjlee38</title>
    <link>http://localhost:1313/tags/reactor/</link>
    <description>Recent content in Reactor on cjlee38</description>
    <generator>Hugo -- 0.127.0</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 21 Jan 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/reactor/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>reactor-kafka 는 조심하자</title>
      <link>http://localhost:1313/post/graceful-kafka-receiver/</link>
      <pubDate>Tue, 21 Jan 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/graceful-kafka-receiver/</guid>
      <description>지난 약 1년 조금 넘는 기간 동안, 미들웨어 기능을 담당하는 알림 플랫폼을 구축하는 업무를 진행했다. 알림 플랫폼 구축 시 요구사항 중 하나는 알림 발송을 수신하는 서버 역할의 서비스에는 TPS 에 대한 제한이 있지만, 알림 발송을 요청하는 클라이언트의 서비스는 TPS 에 대한 제어 없이 무작위로 발송할 수 있어야 한다는 것이기 때문에, 적절한 제어와 high throughput 을 보장하기 위해 spring webflux 와 kafka 를 사용했다.
spring webflux 환경에서, kafka 를 사용할 일이 생기면 일반적으로 reactor-kafka 를 채택하기 마련이다.</description>
    </item>
  </channel>
</rss>
